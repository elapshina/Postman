{
	"info": {
		"_postman_id": "b57e7448-cb8a-4acd-aa27-fe149ad0f4ac",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Correct string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first?name=Kate&age=32&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "39"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Wed, 16 Mar 2022 08:40:40 GMT"
						}
					],
					"cookie": [],
					"body": "This is the first responce from server!"
				}
			]
		},
		{
			"name": "Request_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200.\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"var responseData = pm.response.json();\r",
							"// 4.Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"User name\", function () {\r",
							"    pm.expect(responseData.name).to.eql(\"Kate\");\r",
							"});\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"User age\", function () {\r",
							"    pm.expect(responseData.age).to.eql(\"32\");\r",
							"});\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"User salary\", function () {\r",
							"    pm.expect(responseData.salary).to.eql(1000);\r",
							"});\r",
							"// 7. Спарсить request.\r",
							"let requestData = request.data;\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(responseData.age).to.eql(requestData.age);\r",
							"});\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(responseData.salary).to.eql(+requestData.salary);\r",
							"});\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"console.log(\"family\", responseData.family);\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"    pm.expect(responseData.family.u_salary_1_5_year).to.eql(requestData.salary * 4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"contentType": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": [
				{
					"name": "Request_2",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "32",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Kate",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "114"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Wed, 16 Mar 2022 09:03:44 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"32\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"u_salary_1_5_year\": 4000\n    },\n    \"name\": \"Kate\",\n    \"salary\": 1000\n}"
				}
			]
		},
		{
			"name": "Request_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let responseData = pm.response.json();\r",
							"// 4. Спарсить request.\r",
							"let requestData = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(responseData.age).to.eql(requestData.age);\r",
							"});\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(responseData.salary).to.eql(+requestData.salary);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(\"family\", responseData.family);\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Dog_name\", function () {\r",
							"    pm.expect(responseData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog_age\", function () {\r",
							"    pm.expect(responseData.family.pets.dog).to.include.keys(\"age\");\r",
							"});\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Dog_name_Luky\", function () {\r",
							"    pm.expect(responseData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Dog_age\", function () {\r",
							"    pm.expect(responseData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kate&age=32&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": [
				{
					"name": "Request_3",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Kate&age=32&salary=1000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Kate"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "184"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Thu, 17 Mar 2022 12:19:24 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"32\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"pets\": {\n            \"cat\": {\n                \"age\": 3,\n                \"name\": \"Sunny\"\n            },\n            \"dog\": {\n                \"age\": 4,\n                \"name\": \"Luky\"\n            }\n        },\n        \"u_salary_1_5_year\": 4000\n    },\n    \"name\": \"Kate\",\n    \"salary\": 1000\n}"
				}
			]
		},
		{
			"name": "Request_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let responseData = pm.response.json();\r",
							"// 4. Спарсить request.\r",
							"let requestData = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age\", function () {\r",
							"        pm.expect(responseData.age).to.eql(+requestData.age);\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log(\"salary\", requestData.salary);\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"salary\", responseData.salary);\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"salary\", responseData.salary [0]);\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"salary\", responseData.salary [1]);\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"salary\", responseData.salary [2]);\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Check salary[0]\", function () {\r",
							"    pm.expect(responseData.salary [0]).to.eql(+requestData.salary);\r",
							"});\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary[1]\", function () {\r",
							"    pm.expect(responseData.salary [1]).to.eql(String(requestData.salary*2));\r",
							"});\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check salary[2]\", function () {\r",
							"    pm.expect(responseData.salary[2]).to.eql(String(requestData.salary*3));\r",
							"});\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// 8. Передать в окружение переменную name\r",
							"pm.collectionVariables.set(\"name\",responseData.name);\r",
							"// 19. Передать в окружение переменную age\r",
							"pm.collectionVariables.set(\"age\",responseData.age);\r",
							"// 20. Передать в окружение переменную salary\r",
							"pm.collectionVariables.set(\"salary\",responseData.salary[0]);\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.2\r",
							"for (let i of responseData.salary){console.log (i)};\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Kate&age=32&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": [
				{
					"name": "Request_4",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Kate&age=32&salary=1000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Kate"
								},
								{
									"key": "age",
									"value": "32"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "55"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 28 Mar 2022 08:21:04 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": 32,\n    \"name\": \"Kate\",\n    \"salary\": [\n        1000,\n        \"2000\",\n        \"3000\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Request_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"// 7. Спарсить request.\r",
							"var reqData = request.data;\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"qa_salary_after_1.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Response start_qa_salary = Request start_qa_salary\", function () {\r",
							"    pm.expect(respData.start_qa_salary).to.eql(+reqData.salary);\r",
							"});\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Response qa_salary_after_6_months = Request qa_salary_after_6_months\", function () {\r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(reqData.salary*2);\r",
							"});\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Response qa_salary_after_12_months = Request qa_salary_after_12_months\", function () {\r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(reqData.salary*2.7);\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"Response qa_salary_after_1.5_year = Request qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(respData['qa_salary_after_1.5_year']).to.eql(reqData.salary*3.3);\r",
							"});\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Response qa_salary_after_3.5_years = Request qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(respData['qa_salary_after_3.5_years']).to.eql(+reqData.salary*3.8);\r",
							"});\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"person 1 u_name = salary request\", function () {\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(+reqData.salary);\r",
							"});\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"u_age = age request\", function () {\r",
							"    pm.expect(respData.person.u_age).to.eql(+reqData.age);\r",
							"});\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"person u_salary_5_years = salary*4.2  request\", function () {\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(+reqData.salary*4.2);\r",
							"});\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for (let i of respData.person.u_name){\r",
							"    console.log(i)};\r",
							" \r",
							"\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "string"
		},
		{
			"key": "salary",
			"value": "",
			"type": "string"
		},
		{
			"key": "url",
			"value": "",
			"type": "string"
		}
	]
}